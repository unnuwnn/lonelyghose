{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","anchor","PublicKey","process","Connection","parseInt","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","autoConnect","ReactDOM","render","document","getElementById"],"mappings":"miBA2EeA,GAnDE,IAAIC,IAAYC,UAC/BC,gDAGa,IAAIF,IAAYC,UAC7BC,gDAGqB,IAAIF,IAAYC,UACrCC,gDAMiB,IAAIF,IAAYG,WADnBD,uCAGME,SAASF,aAAyC,IAI5D,WACV,IAAMG,EAAWC,mBAAQ,kBAAMC,wBAVjBL,kBAUyC,IAEjDM,EAAUF,mBACd,iBAAM,CAACG,6BAAoBC,8BAAqBC,+BAChD,IAKF,OACE,cAAC,qBAAD,CAAoBN,SAAUA,EAA9B,SACE,cAAC,iBAAD,CAAgBG,QAASA,EAASI,aAAW,EAA7C,SACE,cAAC,uBAAD,UCpDRC,IAASC,OAAO,cAAC,EAAD,IAGdC,SAASC,eAAe,W","file":"static/js/main.82a58205.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useMemo } from \"react\";\nimport Home from \"./Home\";\n// import \"./demo\";\n// import \"./login\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n// import { getCandyMachineState } from \"./candy-machine\";\n\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n\n  \n\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletDialogProvider>\n          {/* <Home\n            candyMachineId={candyMachineId}\n            config={config}\n            connection={connection}\n            startDate={startDateSeed}\n            treasury={treasury}\n            txTimeout={txTimeout}\n          /> */}\n        </WalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n};\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import * as anchor from \"@project-serum/anchor\";\n\nReactDOM.render(<App />,\n\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}